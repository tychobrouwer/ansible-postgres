---
# tasks file for ansible-postgres
- name: Install database packages
  ansible.builtin.package:
    name:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
      - gnupg
    state: present

- name: Get postgresql Version
  ansible.builtin.command: "psql --version"
  changed_when: false
  register: postgresql_version_raw

- name: Set postgresql password encryption
  ansible.builtin.lineinfile:
    path: "/etc/postgresql/{{ postgresql_version_raw | regex_search('\\d\\d') }}/main/postgresql.conf"
    regexp: "^password_encryption = "
    insertafter: "^#password_encryption = "
    line: password_encryption = scram-sha-256

- name: Ensure a locale exists
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present
  notify: Restart postgresql service

- name: Start postgresql service
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Create the postgres database user
  community.postgresql.postgresql_user:
    name: "{{ postgres_db_user }}"
    password: "{{ postgres_db_password }}"
  become: true
  become_method: su
  become_user: postgres
  vars:
    ansible_ssh_pipelining: false

- name: Create the postgres database
  community.postgresql.postgresql_db:
    name: "{{ postgres_db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    owner: "{{ postgres_db_user }}"
  become: true
  become_method: su
  become_user: postgres
  vars:
    ansible_ssh_pipelining: false

- name: Grant postgres user access to database
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ postgresql_version_raw | regex_search('\\d\\d') }}/main/pg_hba.conf"
    contype: local
    users: "{{ postgres_db_user }}"
    databases: "{{ postgres_db_name }}"
    method: scram-sha-256
    create: true

- name: Connect to database
  community.postgresql.postgresql_user:
    db: "{{ postgres_db_name }}"
    name: "{{ postgres_db_user }}"
  become: true
  become_method: su
  become_user: postgres
  vars:
    ansible_ssh_pipelining: false
